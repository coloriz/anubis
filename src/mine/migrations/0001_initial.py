# Generated by Django 3.2.5 on 2021-07-28 07:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.CharField(max_length=16, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Commander',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('args_fmt', models.CharField(default='ssh -T {id} {script}', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.CharField(max_length=16, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('ac_address', models.CharField(max_length=8)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=False)),
                ('mac_address', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator('^([0-9A-F]{2}-){5}([0-9A-F]{2})$')])),
                ('notification', models.BooleanField(default=False)),
                ('commander', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers', to='mine.commander')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workers', to='mine.room')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('command', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scripts', to='mine.command')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scripts', to='mine.platform')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('script', models.TextField()),
                ('timeout', models.IntegerField(default=600, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(86400)])),
                ('status', models.CharField(choices=[('QUEUED', 'Queued'), ('RUNNING', 'Running'), ('DONE', 'Done'), ('TIMEOUT', 'Timeout'), ('CANCELLED', 'Cancelled')], default='QUEUED', max_length=16)),
                ('submitted_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('returncode', models.IntegerField(blank=True, null=True)),
                ('stdout', models.TextField(blank=True, null=True)),
                ('stderr', models.TextField(blank=True, null=True)),
                ('commander', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='mine.commander')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.AddField(
            model_name='commander',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commanders', to='mine.platform'),
        ),
        migrations.AddField(
            model_name='commander',
            name='supported_commands',
            field=models.ManyToManyField(related_name='commanders', to='mine.Command'),
        ),
        migrations.AddConstraint(
            model_name='script',
            constraint=models.UniqueConstraint(fields=('command', 'platform'), name='unique_command_platform'),
        ),
    ]
